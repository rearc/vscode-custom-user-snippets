"Python3 Parameterized Script": {
    "prefix": "pyscript",
    "body": [
      "#!/usr/bin/env python3",
      "\"\"\"${1:script_name}",
      "",
      "${2:script_description}",
      "",
      "Functions",
      "---------",
      "__get_arguments() - returns argparse.ArgumentParser object with script args",
      "",
      "main() - the script's main function",
      "\"\"\"",
      "import argparse",
      "import logging",
      "import sys",
      "",
      "logger = logging.getLogger(__name__)",
      "for h in logger.handlers:",
      "    logger.removeHandler(h)",
      "h = logging.StreamHandler(sys.stdout)",
      "FORMAT = '%(asctime)s [%(levelname)s] <%(name)s> - %(message)s'",
      "h.setFormatter(logging.Formatter(FORMAT))",
      "logger.addHandler(h)",
      "",
      "",
      "def __get_arguments() -> argparse.ArgumentParser:",
      "    \"\"\"Creates an argparse parser for simplifying parameterization of",
      "    the script and argument management",
      "",
      "    Returns",
      "    -------",
      "    arguments: argparse.ArgumentParser",
      "        an argparse parser object with a set of parsed arguments",
      "    \"\"\"",
      "    try:",
      "        parser = argparse.ArgumentParser(usage='%(prog)s --log_level DEBUG')",
      "        parser.add_argument(",
      "            \"-l\",",
      "            \"--log_level\",",
      "            default=\"INFO\",",
      "            help=\"Used to explicitly set the Log Level (Default: INFO)\"",
      "        )",
      "        arguments = parser.parse_args()",
      "        return arguments",
      "    except Exception:",
      "        logger.exception(\"Error accessing arguments!\")",
      "",
      "",
      "def main():",
      "    arguments = __get_arguments()",
      "    logger.setLevel(arguments.log_level)",
      ""
    ],
    "description": "Python3 Parameterized Script"
  }